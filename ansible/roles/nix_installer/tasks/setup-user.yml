---
- name: Prepare Nix store on the home partition
  become: true
  block:
    - name: "Define the real storage path for the Nix store"
      ansible.builtin.set_fact:
        nix_real_store_path: "/home/nix_store"

    - name: "Create the real storage directory on /home"
      ansible.builtin.file:
        path: "{{ nix_real_store_path }}"
        state: directory
        owner: root
        group: wheel
        mode: '0755'

    - name: "Ensure /nix mount point exists"
      ansible.builtin.file:
        path: "/nix"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: "Set up the bind mount in /etc/fstab"
      ansible.posix.mount:
        path: "/nix"
        src: "{{ nix_real_store_path }}"
        fstype: none
        opts: bind
        state: present

    - name: "Ensure /nix is correctly bind mounted"
      ansible.posix.mount:
        path: "/nix"
        src: "{{ nix_real_store_path }}"
        fstype: none
        opts: bind
        state: mounted

- name: Ensure Nix user exists
  become: true
  ansible.builtin.user:
    name: "{{ nix_user }}"
    state: present
  register: nix_user_details

- name: Set fact for Nix config directory path
  ansible.builtin.set_fact:
    nix_config_dir_path: "{{ lookup('env', 'XDG_CONFIG_HOME') | default(nix_user_details.home + '/.config', true) }}/nix"

- name: Ensure Nix user config directory exists
  become: true
  ansible.builtin.file:
    path: "{{ nix_config_dir_path }}"
    state: directory
    owner: "{{ nix_user }}"
    mode: "0755"

- name: Enable Flakes in the user's nix.conf
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.config/nix/nix.conf"
    create: true
    mode: '0644'
    block: |
      experimental-features = nix-command flakes
      accept-flake-config = true
